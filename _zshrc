
export ZSH="${HOME}/.oh-my-zsh"
export ZSH_THEME='miloshadzic'

function init() {
    for _plugin in zsh-completions zsh-autosuggestions zsh-syntax-highlighting zsh-history-substring-search; do
      if [ ! -d "${ZSH}/plugins/${_plugin}" ]; then (cd "${ZSH}/plugins" && git clone "https://github.com/zsh-users/${_plugin}.git"); fi
    done
}

function plugins() {
  if [ "$(uname)" = "Darwin" ]; then
    plugins=(git tmux brew macos tmux python screen sudo docker cargo docker-compose fd gitfast kubectl mvn ripgrep rust tmuxinator zsh-completions zsh-autosuggestions zsh-syntax-highlighting zsh-history-substring-search)
  else
    plugins=(git tmux tmux python screen sudo docker cargo docker-compose fd gitfast kubectl mvn ripgrep rust tmuxinator zsh-completions zsh-autosuggestions zsh-syntax-highlighting zsh-history-substring-search)
  fi
  source $ZSH/oh-my-zsh.sh
}

function define_path() {
  export PATH="/usr/local/sbin:/usr/local/bin:/bin:/usr/sbin:/sbin:/usr/bin"
  # mac specific things
  if [ "$(uname)" = "Darwin" ]; then
    export PATH="${PATH}:/usr/local/homebrew/bin:/Applications/Xcode.app/Contents/Developer/usr/bin"
    if [ -f "${HOME}/src/z.lua/z.lua" ]; then
      eval "$(lua ${HOME}/src/z.lua/z.lua --init zsh enhanced)"
    fi
    if [ -d "/usr/local/opt/python@3.8/" ]; then export PATH="/usr/local/opt/python@3.8/bin:${PATH}"; fi
  fi

  # linux specific things
  if [ "$(uname)" = "Linux" ]; then
    if [ -f "/usr/bin/lua" ]; then
      eval "$(lua ${HOME}/src/z.lua/z.lua --init zsh enhanced)"
    fi
  fi
  if [ -d "${GOPATH}" ]; then export PATH="${PATH}:${GOPATH}/bin"; fi
}

function custom_exports() {
  define_path
  export PROMPT='${ret_status}%{$fg_bold[green]%}%p %{$fg[cyan]%}%c %{$fg_bold[blue]%}$(git_prompt_info)%{$fg_bold[blue]%} % %{$reset_color%}'
  export REPO_PATH=${HOME}/src/
  export PYTHONPATH=${HOME}/src/caliber
  export PIP_DOWNLOAD_CACHE=${HOME}/.pip/cache
  export PEXPECT_START_TIMEOUT=180
  export PYTHONSTARTUP=${HOME}/.pythonrc.py
  export CALIBER_DEBUG=1
  export EDITOR="vim"
  export TF_CPP_MIN_LOG_LEVEL=2
  export COMPOSE_API_VERSION=auto
  export HOMEBREW_GITHUB_API_TOKEN='e6d02dedc0bce928e7e2c0724a4b16b52e9068b9'
  export GOROOT=${HOME}/go
  export GOPATH=${HOME}/go/pkg
  export PATH=$PATH:$GOROOT/bin
  if [ "$(uname)" = "Darwin" ]; then
    export JAVA_HOME=$(/usr/libexec/java_home)
  else
    export JAVA_HOME="/usr/lib/jvm/java-1.11.0-openjdk-amd64"
  fi

  export JDK_HOME=${JAVA_HOME}
  for _file in "${HOME}/google-cloud-sdk/path.zsh.inc" \
  "${HOME}/google-cloud-sdk/completion.zsh.inc" \
  "${HOME}/.cargo/env" \
  "${HOME}/.ssh/kub_detection_db.properties" \
  "${HOME}/env/export.properties" \
  "${HOME}/.poetry/env":
  do
    if [ -f "${_file}" ]; then echo "[exports] Sourcing ${_file}" && source "${_file}"; fi
  done
  # if [ -d "${HOME}/.rbenv/libexec" ]; then eval "$(${HOME}/.rbenv/libexec/rbenv init -)"; fi
}

function custom_aliases() {
  # cargo install starship rustup bat fzf prettyping bat ncdu exa procs fd topgrade
  . "${HOME}/src/dotfiles/aliases.zsh"
  alias gall="for i in \$(find \${HOME}/src -type d -depth 1); do (echo \"==== Updating \$i ====\"; cd \$i; git stash && g p && gfa && git stash pop; cd -); done"
  alias pipall="for i in \$(pip list -o --format columns|awk '{print \$1}') ; do pip install -U \$i; done"
  alias zconf="vim ${HOME}/.zshrc"
  alias reload=". ${HOME}/.zshrc"
  alias antnn='ant -Dskip.download=true -Divy.has.resolved=true'
  alias ping='prettyping --nolegend'
  alias cat='bat'
  alias preview="fzf --preview 'bat --color \"always\" {}'"
  alias top='htop'
  alias du="ncdu --color dark -rr -x --exclude .git --exclude node_modules"
  alias l='exa --long --git -g -a -s modified'
  alias top='glances'
  alias zc='z -c'      # restrict matches to subdirs of $PWD
  alias zz='z -i'      # cd with interactive selection
  alias zf='z -I'      # use fzf to select in multiple matches
  alias zb='z -b'      # quickly cd to the parent directory
  alias idea='open -a "$(\ls -dt /Applications/IntelliJ\ IDEA*|head -1)"'
  alias dall="docker images --format \"{{.Repository}}:{{.Tag}}\" | grep ':latest' | xargs -L1 docker pull"
}

function enable_node() {
  if [ -f "/usr/local/opt/nvm/nvm.sh" ]; then
    export NVM_DIR="${HOME}/.nvm" && . "/usr/local/opt/nvm/nvm.sh"
  fi
}

function jlog() { less +F -r $@ |jq . -r }

function sleep-in() {
  local minutes=$1
  local datetime=`date -v+${minutes}M +"%m/%d/%y %H:%M:%S"`
  sudo pmset schedule sleep "$datetime"
}

function ssh_agent() {
  if [ "x$SSH_AUTH_SOCK" = "x" ]; then
    eval "$(ssh-agent)"
    for i in $(find ${HOME}/.ssh -type f -name '*_rsa'); do ssh-add $i; done
  fi
}

function antigen() {
  if [ -f "${HOME}/src/dotfiles/antigen.zsh" ]; then
    . ${HOME}/src/dotfiles/antigen.zsh
    antigen use oh-my-zsh
    antigen bundle zsh-users/zsh-completions
    antigen bundle zsh-users/zsh-autosuggestions
    antigen bundle zsh-users/zsh-syntax-highlighting
    antigen bundle zsh-users/zsh-history-substring-search
    antigen bundle git
    antigen bundle docker
    antigen bundle tmux
    antigen bundle brew
    antigen bundle osx
    antigen bundle tmux
    antigen bundle python
    antigen bundle sudo
    antigen bundle pip
    antigen bundle akarzim/zsh-docker-aliases
    antigen bundle kubectl
    antigen bundle aws
    #ZSH_THEME='nanotech'
    antigen theme miloshadzic
    antigen apply
  fi
}

function a1saliases() {
    alias kitchen-docker=’DOCKER_BUILDKIT=0 COOK_IN_DOCKER=1 kitchen’
}

init
custom_exports
plugins
ssh_agent
antigen
enable_node
custom_aliases
eval "$(starship init zsh)"
a1saliases

# Load the theme
if [ ! "$ZSH_THEME" = ""  ]; then
  if [ -f "$ZSH_CUSTOM/$ZSH_THEME.zsh-theme" ]; then
    source "$ZSH_CUSTOM/$ZSH_THEME.zsh-theme"
  elif [ -f "$ZSH_CUSTOM/themes/$ZSH_THEME.zsh-theme" ]; then
    source "$ZSH_CUSTOM/themes/$ZSH_THEME.zsh-theme"
  else
    source "$ZSH/themes/$ZSH_THEME.zsh-theme"
  fi
fi

export PATH="$HOME/.poetry/bin:$PATH"
