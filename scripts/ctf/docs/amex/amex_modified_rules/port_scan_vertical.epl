module Module_recon_ext_vertical_01;
@RSAAlert(identifiers={"ip_src"})

SELECT window(*) FROM Event ((medium <> 32 OR device_type IN ('ciscoasa', 'ciscopix')) AND ip_src IS NOT NULL AND ip_dst IS NOT NULL AND ip_src NOT IN ('107.0.0.1', '224.0.0.252', '0.0.0.0') AND (net_src NOT IN ('amex_internal_src', 'amex_public_src') OR net_src IS NULL) AND ip_dst NOT IN ('10.100.33.220', '10.100.33.221', '10.100.33.222', '10.100.33.223', '10.100.33.224', '10.100.33.225', '10.100.33.226', '10.100.33.227', '10.100.33.228', '10.100.33.229', '148.100.97.161', '148.100.97.162', '148.100.97.163', '148.100.97.164', '148.100.97.165', '148.100.97.166', '148.100.97.167', '148.100.97.168', '148.100.97.169', '148.100.97.170', '10.100.33.37', '148.100.97.149', '10.100.33.98', '10.100.33.176', '193.32.34.67', '148.100.89.130', '203.170.25.14', '203.170.25.21', '203.170.25.10', '10.105.183.201', '10.105.183.200', '148.100.89.109')).std:groupwin(ip_src, ip_dst).std:unique(ip_dstport, tcp_dstport, udp_dstport).win:time_length_batch(60 sec, 60) GROUP BY ip_src, ip_dst HAVING count(*) = 60 OUTPUT first every 30 minutes;
