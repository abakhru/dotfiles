
# Machines

10.101.216.143 (zion): Test Runner

10.63.21.47 - SA

# 10.101.217.21 -
# 10.101.59.141 - Injectors
# 10.101.59.140 - Injectors

10.31.204.103  - Concentrator/LogDecoder  Hybrid Deployment (Injectors)
10.31.204.104  - Concentrator/LogDecoder  Hybrid Deployment (Injectors)
10.31.204.107  - Concentrator/LogDecoder  Hybrid Deployment (Injectors)

10.31.204.99  - ESA
10.31.205.69 – ESA


# Irene PST things:
Implementation Overview: https://emccorp.webex.com/emccorp/lsr.php?RCID=481117207e4e1e793821e0d22e332169
PSR Phase 2 review: https://emccorp.webex.com/emccorp/lsr.php?RCID=5c59a545386ee79f2f6c44a9af394c7d
Branch: asoc-3131-performance-v2
Bangalore Team ESA automation demo: https://emccorp.webex.com/emccorp/lsr.php?RCID=a05f79afd69cb8c28b1971740ef2591e

# Bangalore ESA PSR Execution Doc/Attachment:
https://wiki.na.rsa.net/display/ENVNG/ESA+PSR+Execution+Documentation
https://wiki.na.rsa.net/pages/viewpageattachments.action?pageId=60720266

Longevity 10.4 Setup and details(SSL OFF/ SSL ON/ FIPS):
https://wiki.na.rsa.net/display/ENVNG/Longevity-10.4+Results
https://wiki.na.rsa.net/display/ENVNG/Longevity+10.4+With+SSL+ON%3AResults
https://wiki.na.rsa.net/display/ENVNG/10.4+PSR+%3A+FIPS+Test+Plan+and+Results

ESA Comparison rates:
ESA PSR Test Results 10.4 I2 Attached -> “ESA PSR-TestResults-10 4 Iteration 2.xlsx”
ESA PSR Test Results 10.3 SP1 Attached -> “ESA_PSR-TestResults-10 3SP1-Consolidated.pptx”

All the dumps are shared in : “10.101.216.113:/ESA-KT” Directory

# Bangalore automation KB: https://wiki.na.rsa.net/display/ENVNG/Automation+KB

# Execution
Step 1:
- setup password login from driver(mac here) to all other machines.
for i in [list of all nodes]:
do
	scp ~/.ssh/authorized_keys root@$i:~/.ssh/
done
** scp ~/.ssh/authorized_keys root@10.31.205.69:~/.ssh/

- Unzip the attached file bangalore_esa.zip and copy the folders/folder-contents into the below mentioned locations.
- Copy the contents of esabox folder to the ESA box's "~ (/root/)" dir.
- Copy the other three folders, namely: clearnoise, scripts, triggerlogs into the injection box.
- Edit the /etc/hosts file to reflect settings like shown below.
NOTE: This is needed for remotes JMX connections and resolution of concentrator hostnames
	  (Last line in the screenshot below is added for a single concentrator[repeat the same for n
      number for concentrators], which is needed for cleanrun.py script to function well).
      Please make sure you add ESA hostname and ip as well.
Finally, it will look something like this:

# more /etc/hosts (SA Machine)
# Created by NetWitness Installer on Tue Feb  3 06:02:13 UTC 2015
127.0.0.1 NWAPPLIANCE16435 localhost localhost.localdomain localhost4 localhost4.localdomain4 puppetmaster.local puppetmaster.local
::1 NWAPPLIANCE16435 localhost localhost.localdomain localhost6 localhost6.localdomain6
# Concentrator/LogDecoder/Injectors Hybrid Deployment
10.31.204.103   NWAPPLIANCE26784
10.31.204.104   NWAPPLIANCE22471
10.31.204.107   NWAPPLIANCE8013
# ESA
10.31.204.99    NWAPPLIANCE12275
10.31.205.69    NWAPPLIANCE11232

- Add license if you are going to skip Step 2. Trial license uploaded from SA UI should do.
- Install bc package on all nodes. This will be needed for parsing.
- Import all rules(EPL):
** Import modules attached to this page via SA UI's Alerting>Manage->All Rules->Import feature


PSR Observations:
# Desc: User not null
# All Failed login events with user_dst not null
# Publish log: clearNoise @ 30k per LD, threekfail.log @ 3K per LD
# trigger_log_path = '/root/threekfail.log'
user_not_null = ("module UserNotNullmoduleId%d;@Name('UserNotNull%d_Alert') "
				"@Description('UserNotNullmoduleDesc%d') @RSAAlert(oneInSeconds=0) "
				"SELECT * FROM Event( ec_subject='User' AND ec_activity = 'Logon' AND "
				"ec_outcome = 'Failure' AND user_dst is not null); " % (a, a, a))
# Desc: Brute Force Login From Same Destination
# A brute force login attempt from the same destination with N failed login attempts
# from the same host have been detected within a specified time window
# Publish log: clearNoise @ 30k per LD, threekfail.log @ 3K per LD
# trigger_log_path = '/root/threekfail.log'
brute_force = ("module GHmoduleId%d;@Name('GHmoduleName%d') @Description("
			"'GHmoduleDesc%d') @RSAAlert(oneInSeconds=0, identifiers={'ip_dst'}) "
			"SELECT * FROM Event( ec_activity = 'Logon', ec_theme = "
			"'Authentication', ec_outcome = 'Failure', ip_dst IS NOT NULL "
			").std:groupwin(ip_dst).win:time_length_batch(5 min, 10) GROUP BY "
			"ip_dst HAVING COUNT(*) >= 10;" % (a, a, a))
# Multiple Failed Logins Followed By a Successful Login No Partition
# Multiple(here 5 times) Failed Logins for a User Followed By a Successful Login
# within N minute with No partiion
# Publish log: clearNoise @ 30k per LD
#               , tenkfail.log @ 3K per LD + twoksucc.log @ 3K per LD
# triggerlog_path1 = '/root/tenkfail.log'
# triggerlog_path2 = '/root/twoksucc.log'
# sleep 250 seconds between trigger publishing loop
# 50 EPLs
# ( trigger_log_path1 + trigger_log_path2 )
multi_fail_then_sucess = ("module GHmoduleId%d;@Name('GHmoduleName%d') @Description("
						"'GHmoduleDesc%d') @RSAAlert(oneInSeconds=0, identifiers={"
						"'user_dst'}) SELECT * FROM Event(ec_outcome in ('Success', "
						"'Failure') AND ec_activity='Logon').win:time(5 min) "
						"match_recognize (measures F as f_array, S as s pattern (F "
						"F F F F+ S+) define F as F.ec_outcome= 'Failure', "
						"S as S.ec_outcome= 'Success');" % (a, a, a))
# Multiple Failed Logins Followed By a Successful Login with partition
# Multiple(here 5 times) Failed Logins for a User Followed By a Successful Login
# within N minute with partition based on user_dst
# Publish log: clearNoise @ 30k per LD
# , tenkfail.log @ 3K per LD + twoksucc.log @ 3K per LD
# trigger_log_path = '/root/tenkfail.log'
# triggerlog_path2 = '/root/twoksucc.log'
trigger_log_path = '/root/3Kusers_5Kfail_then_1Ksucess.log'
multi_f_then_s_partition = ("module GHmoduleId%d;@Name('GHmoduleName%d') "
							"@Description('GHmoduleDesc%d') @RSAAlert(oneInSeconds=0, "
							"identifiers={'user_dst'}) SELECT * FROM Event(ec_outcome "
							"in ('Success', 'Failure') AND ec_activity='Logon' AND "
							"user_dst IS NOT NULL).win:time(5 min) match_recognize ("
							"partition by user_dst measures F as f_array, "
							"S as s pattern (F F F F F+ S+) define F as F.ec_outcome= "
							"'Failure', S as S.ec_outcome= 'Success');" % (a, a, a))


Run#2
memory metrics enabled
NO PatternMaxSubExpressions
15 mins, 10 EPL multi_fail_then_sucess (without partition)
30k * 3 LDs + 60 EPS of trigger logs (login events: 3k * 5 Failures + 1k Success)
Expected 3000 alerts every 5 min * 10 EPLs
after around 12 mins JVM crashed and no other stats were collected.
Tried finding JVM crash dump file or any such log but couldn't find anything, Maybe because JVM was
consuming close to 40G data so dump wasn't successfull.
Below is the only log message i observed in wrapper.log file of ESA:

ERROR  | wrapper  | 2015/04/01 06:31:16 | JVM appears hung: Timed out waiting for signal from JVM.
ERROR  | wrapper  | 2015/04/01 06:31:17 | JVM did not exit on request, terminated
STATUS | wrapper  | 2015/04/01 06:31:21 | JVM exited in response to signal SIGKILL (9).
ERROR  | wrapper  | 2015/04/01 06:31:21 | Unable to start a JVM
STATUS | wrapper  | 2015/04/01 06:31:21 | < Wrapper Stopped

- Run#3
 memory metrics enabled
 PatternMaxSubExpressions = 1000
 15 mins, 10 EPL multi_fail_then_sucess (without partition)
 30k * 3 LDs + 60 EPS of trigger logs (login events: 3k * 5 Failures + 1k Success)
 Expected 3000 alerts every 5 min * 10 EPLs
 After 1000 (default value) when memory metrics stats collections thread kicks in, all other threads stops processing events
and no processing happens for about 10 mins.
 after 15 mins my script stopped stats collection
 ITS COSTLY to enable memory metrics for to many EPL and high processing rate around 90k
 SHOULD we DISABLE it by default?? Need further investigation
 Currently due to bug https://bedfordjira.na.rsa.net/browse/ASOC-8038 can't see the use of EPL memory metrics stats.

- Run#4
 memory metrics disabled
 PatternMaxSubExpressions = 1000
 30 mins, 10 EPL multi_fail_then_sucess (without partition)
 30k * 3 LDs + 60 EPS of trigger logs (login events: 3k * 5 Failures + 1k Success)
 Expected 3000 alerts every 5 min * 10 EPLs
 ESA stops processing events in between (may be after GC?), for about 330 seconds and then starts processing
events at a faster 120k EPS rate
 Not crashed
 after 30 mins stopped stats collection, but all events were processed and sessionsBehind was 0 after 40-45 mins

- Run#5
 memory metrics disabled
 PatternMaxSubExpressions = 1000
 60 mins, 10 EPL multi_f_then_s_partition (with partition)
 30k * 3 LDs + 60 EPS of trigger logs (login events: 3k * 5 Failures + 1k Success)
 Expected 3000 alerts every 5 min * 10 EPLs
 collecting stats for additional 10 mins
SUCCESSFUL run, no Issues, No crash, all stats available

- Run#6
 memory metrics disabled
 PatternMaxSubExpressions = 1000
 60 mins, 50 EPL multi_f_then_s_partition (with partition)
 collecting stats for additional 2 mins
 30k * 3 LDs + 60 EPS of trigger logs (login events: 3k * 5 Failures + 1k Success)
 Expected 3000 alerts every 5 min * 10 EPLs
SUCCESSFUL run, no Issues, No crash, all stats available

- Run#7
 memory metrics disabled
 PatternMaxSubExpressions = 1000
 60 mins, 50 EPL multi_fail_then_sucess (without partition)
 collecting stats for additional 2 mins
 30k * 3 LDs + 60 EPS of trigger logs (login events: 3k * 5 Failures + 1k Success)
 Expected 3000 alerts every 5 min * 10 EPLs
SUCCESSFUL run, no Issues, No crash, all stats available

- Run#8
 memory metrics disabled
 PatternMaxSubExpressions = 1000
 120 mins, 50 EPL multi_fail_then_sucess (without partition)
 collecting stats for additional 2 mins
 30k * 3 LDs + 60 EPS of trigger logs (login events: 3k * 5 Failures + 1k Success)
 Expected 3000 alerts every 5 min * 10 EPLs
SUCCESSFUL run, no Issues, No crash, all stats available


Issues:
- PatternMaxSubExpressions can be set for default ESA engine only
  through SA UI (https://10.63.21.47/admin/services/30/config -> Advanced Tab).
  Not possible to set it for global esper engine???
