#store archive related settings
set_option("sms_gateway.enable", "1");
#set_option("sms_gateway.debug", "1");

#autoreply-daemon
if exists_channel("sms") {
  delete_channel("sms");
}

add_channel("sms", ["master_debug", "", "slave_debug", "", "official_host_name", "sms.sun.com", "options.debug", "-1", "options.smpp_server", "127.0.0.1", "options.smpp_port", "8200", "options.gateway_profile", "GATEWAY", "options.default_source_address", "000", "options.smsc_default_charset", "UCS2", "options.use_header_from", "0", "options.esme_password", "password", "options.esme_system_id", "smppclient"]);

#Setting rewrite rules
append_rewrites(["sms.sun.com","$U@sms.sun.com"]);

filter1 = "require [\"fileinto\", \"imap4flags\"];
if header :contains \"Message-id\" \"sms.sun.com\"
{addflag \"sms\"; fileinto \"SMS\";}
";
set_option("systemfilter", filter1);

if exists_group("sms_gateway.smpp_server:SMPPSERVER") {
  delete_group("sms_gateway.smpp_server:SMPPSERVER");
}
add_group("sms_gateway.smpp_server:SMPPSERVER", ["tcp_ports", "8201", "server_host", "127.0.0.1", "server_port","2775", "ESME_PASSWORD","password","ESME_SYSTEM_ID","smppclient"]);

if exists_group("sms_gateway.smpp_relay:SMPPRELAY") {
  delete_group("sms_gateway.smpp_relay:SMPPRELAY");
  delete_group("sms_gateway.smpp_relay:SMPP_RELAY");
}
add_group("sms_gateway.smpp_relay:SMPPRELAY", ["server_port", "2775", "tcp_ports", "8200", "server_host", "127.0.0.1"]);

if exists_group("sms_gateway.gateway_profile:GATEWAY") {
  delete_group("sms_gateway.gateway_profile:GATEWAY");
}
add_group("sms_gateway.gateway_profile:GATEWAY", ["select_re", "000([0-9]{10,10}){0,1}", "mta_channel", "sms", "smsc_default_charset", "US-ASCII", "parse_re_0", "[ \t]*([^\( ]*)[ \t]*(?:\(([^\)]*)\))?[ \t]*(.*)"]);
