# Configure the spam filter now
#set_option("mm_debug","10");
set_option("store.enable","0");
set_option("http.enable","0");

#option.dat configuration
slot=1;
set_option("spamfilter" . slot . "_library", make_path("IMTA_LIB:libclamav.so"));
set_option("spamfilter" . slot . "_config_file", make_path("IMTA_TABLE:clamav.opt"));
set_option("spamfilter" . slot . "_string_action", "data:,require [\"reject\",\"ereject\",\"refuse\"]; refuse \"FilterVerdictPositive\"\;");

#dispatcher configuration
if exists_group("dispatcher.service:SMTP_VSCAN") {
  delete_group("dispatcher.service:SMTP_VSCAN");
}
add_group("dispatcher.service:SMTP_VSCAN", ["enable", "1", "image", "IMTA_BIN:tcp_smtp_server", "logfilename", "IMTA_LOG:tcp_vscan_server.log", "parameter", "CHANNEL=tcp_vscan", "tcp_ports", "3025", "stacksize", "2048000"]);

#channel configuration
#tcp_vscan smtp sourcespamfilter1 missingrecipientpolicy 6 pool SMTP_POOL
#tcp_vscan-daemon
if exists_channel("tcp_vscan") {
  delete_channel("tcp_vscan");
}
add_channel("tcp_vscan", ["smtp", "", "sourcespamfilter1", "", "missingrecipientpolicy", "6", "pool", "SMTP_POOL", "master_debug", "", "slave_debug", "", "official_host_name", "tcp_vscan-daemon"]);

#rewrite rules
# Avoid all lookups and just force to bitbucket channel for messages
# coming in the tcp_vscan channel:
append_rewrites(["$*","$U%$H@bitbucket-daemon$Mtcp_vscan"]);

# Create the spam filter option file
if(!exists_file(make_path("clamav.opt"))){
        write_file(make_path("clamav.opt"), write_optlist(put_optlist([], "HOST", "localhost", "PORT", "3310")));
}
