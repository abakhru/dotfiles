set -x
if [ "x$1" = "x" ]; then
  echo Usage $0 conf_prefix
  exit 0
fi

CA_DIR=`pwd`/ca

# Begin optional CA config
if [ -d $CA_DIR ]; then
echo -------------------------
echo Starting CA Configuration
echo -------------------------
rm -rf $CA_DIR/*
mkdir $CA_DIR
mkdir $CA_DIR/private
mkdir $CA_DIR/class
touch $CA_DIR/index.txt
mkdir $CA_DIR/newcerts
echo 01 > $CA_DIR/serial
touch $CA_DIR/private/.rand

echo "
 [ ca ]
 default_ca      = CA_default            # The default ca section

 [ CA_default ]

 # top dir
 dir            = $CA_DIR
 database       = \$dir/index.txt        # index file.
 new_certs_dir  = \$dir/newcerts         # new certs dir

 certificate    = \$dir/cacert.pem       # The CA cert
 serial         = \$dir/serial           # serial no file
 private_key    = \$dir/private/cakey.pem # CA private key
 RANDFILE       = \$dir/private/.rand    # random number file

 default_days   = 365                   # how long to certify for
 default_crl_days= 30                   # how long before next CRL
 default_md     = md5                   # md to use

 policy         = policy_any            # default policy
 email_in_dn    = no                    # Don't add the email into cert DN

 name_opt       = ca_default            # Subject name display option
 cert_opt       = ca_default            # Certificate display option
 copy_extensions = copy             # Don't copy extensions from request

 [ policy_any ]
 countryName            = supplied
 stateOrProvinceName    = optional
 organizationName       = optional
 organizationalUnitName = optional
 commonName             = supplied
 emailAddress           = optional
" >> $CA_DIR/rootca.conf

openssl req -x509 -newkey rsa:1024 -keyout $CA_DIR/private/cakey.pem -out $CA_DIR/cacert.pem

echo -------------------------
echo Ending CA Configuration
echo -------------------------

fi
# End CA config

openssl genrsa -out $CA_DIR/newcerts/$1.rsa 1024
openssl req -text -new -key $CA_DIR/newcerts/$1.rsa -verbose -out $CA_DIR/newcerts/$1.pem -config $1

openssl ca -in $CA_DIR/newcerts/$1.pem -out $CA_DIR/newcerts/signed_$1.pem -verbose -config $CA_DIR/rootca.conf -outdir $CA_DIR/.

openssl pkcs12 -export -out $CA_DIR/newcerts/$1.pkcs12 -in $CA_DIR/newcerts/signed_$1.pem -inkey $CA_DIR/newcerts/$1.rsa -certfile  $CA_DIR/cacert.pem

cp PKCS12Import.java.template PKCS12Import.java

javac PKCS12Import.java
mv PKCS12Import.class $CA_DIR/class/

java -cp $CA_DIR/class/ PKCS12Import $CA_DIR/newcerts/$1.pkcs12 $CA_DIR/newcerts/$1.jks

# Dont forget to import ca cert into cacerts !
#  keytool -v -import -keystore /usr/jdk/entsys-j2se/jre/lib/security/cacerts -alias opensslcacert -file ca.pem
