						Load Test Tools
##########################################################################################################################
Populate
##########################################################################################################################
Populate is a tool that is used to provision contact lists. Contact list provisioning should be performed after user provisioning and before running the Generate tool to generate load on an IM server. Populate uses the IM API to login a set of users and adds contact entries in each user's personal store. A configuration file specifies the users for which to add contacts. Populate randomly selects the contacts to add from a range of potential contacts that can reside in the local domain or in another domain hosted on another server.
Usage:

/usr/bin/java -cp $classpath com.sun.im.service.load.Populate <config-file>
where $classpath should include the location of the following IM sdk jar files:
imservice.jar
jso.jar
log4j.jar
jaxen-core.jar
saxpath.jar
xp.jar

and <config-file> should specify the location of the configuration file,

e.g. ./load-contacts

The first entry of the configuration file has the following format:
<start><end><server><first contact><number of contacts><contact list length><uid_length>

where:

<start> - first user's uid whose contact list is to be populated. User ids are assumed to be numbers, as the Populate tool iterates through the range of user ids, beginning with the starting uid, eg. a starting uid could be 100000.

<end> - last user's uid whose contact list is to be populated. User ids are assumed to be numbers, as the Populate tool iterates through the range of user ids, until the ending uid is processed.

<server> - server where contacts are provisioned, specify port if not using the default multiplexor port, 5222,
e.g. imqa-x2.red.iplanet.com:5269

<first contact> - first contact available to be added to a user's contact list

<number of contacts> - number of contacts available to be added to a user's contact list

<contact list length> - number of contacts to add to each user's contact list

<uid length> - length of each user's uid, if the start uid is 100000, then this value should be 6.

Each additional entry in the configuration file specifies contacts representing users hosted on another server (i.e. server - server configuration) and should be in the following format:

<server><first contact><last contact>

where:

<server> - server which hosts users that can be used as contacts <first contact> - first contact available to be added to a user's contact list <last contact> - last contact available to be added to a user's contact list

##########################################################################################################################
Generate
##########################################################################################################################

Generate is a load generation tool that uses the IM service API to simulate IM user actiions. Supported actions include client logins, presence updates, private and public conference rooms, and notifications. Generate uses a number of options to vary the type and amount of load on an IM server. Each simulated user is logged in at the beginning of a load run. Depending on the options specified, a mix of IM service load is generated, with corresponding response time measurements taken. The tool will continue indefinitely. To end a load run, kill the process running the Generate program.
Usage:

/usr/bin/java -cp $classpath com.sun.im.service.load.Generate <config-file>

where $classpath should include the location of the following IM sdk jar files:
imservice.jar
jso.jar
log4j.jar
jaxen-core.jar
saxpath.jar
xp.jar

and <config-file> should specify the location of the configuration file, e.g. /export/home/load/contract

The first entry of the configuration file has the following format:

<server><start><number of users><options>

Additional entries used for server to server configuration requires the following format:

<server><start><number of users>

where:

<server> - server where load is directed, specify port if not using the default multiplexor listen port, 5222, e.g. imqa-x2.red.iplanet.com:5269

<start> - first user's uid available to participate in the load run. User ids are assumed to be numbers, as the Generate tool iterates through the range of user ids, beginning with the start uid, eg. a starting uid could be 100000.

<number of users> - total number of users that are to particpate in the load run

<options> - a combination of the following can be used:

-stats:period <interval> - used to indicate that counts and measurements of IM service operations should be output during the test run at the period interval in seconds specified. This option maintains counts and time measurements of the resources and services being used during the load run. Resources include sessions, conferences, and conference participants, while services include authentications, presence updates, and messages sent. Order counts are the number of resources and service operation active at the time of the load statistics are output. Cumulative counts are the number of resources that have been used during the load run. Service statistics include the minimum, maximum, and average time to complete an operation. Here is an example of one stats interval output:
STAT
STAT res:conference_participant order=1150 cumul=44293
STAT res:conference order=0 cumul=0
STAT res:session order=2400 cumul=7308
STAT svc:presence order=6480 avg.t=1879 max.t=8139 min.t=20
STAT svc:message order=455250 avg.t=1 max.t=202 min.t=1
STAT svc:auth order=7308 avg.t=3354 max.t=57746 min.t=185
STAT

-wait <min wait time> <max wait time> - specifies the minimum and maximum time between messages sent by a particpant in a conference room. The default minimum wait time is 1 sec. The default maximum wait time is 10 seconds. A random wait time between message sends is derived from these values.

-aml - enable or add message listener, when, specified, each message sent is logged. The default value for this option is disabled.

-log <log file> - specifies the path and name of the log file. If no log option is specified, log entries are directed to std out.

-apilog <log4j properties file> - specifies the location and name of the log4j properties file to be used when enabling debug log entries of the service api. Here's an example of the contents of a im service api log4j properties file:

log4j.rootLogger=OFF
log4j.logger.com.sun.im.service.xmpp=DEBUG, A1
log4j.logger.com.sun.im.service.xmpp.traffic=DEBUG, A1
log4j.additivity.com.sun.im.service.xmpp.traffic=false
log4j.appender.A1=org.apache.log4j.RollingFileAppender
log4j.appender.A1.file=./logs/api.log
log4j.appender.A1.append=true
log4j.appender.A1.maxBackupIndex=1
log4j.appender.A1.maxFileSize=500000kb
# A1 uses PatternLayout.
log4j.appender.A1.layout=org.apache.log4j.PatternLayout
log4j.appender.A1.layout.ConversionPattern=%d{DATE}? %c{1}? %t? %m%n

The default value of this option is not to log im service api debug entries.

-factory <factory name> - ???still relevantspecifies the name of the CollaborationSessionFactory to use. It needs to be set if a non-default implementation of the CollaborationSessionFactory is in use. The default is to use the default CollaborationSessionFactory.

-concurrency <number> - ??? probably deprecated, sets the number of worker threads available for each user session in the com.iplanet.im.client class, the default is 2.

-capacity <number> - ??? probably deprecated, as was used to set the capacity property of the com.iplanet.mux.capacity package, which doesn't appear to exist for in IM 7.

-upates <number> - number of presence updates per day each user makes. The default is 20.

-noupdates - no presence updates are used in the load run. This option is used to override the default updates number. By default, this option is not used.

-relogin <number> - number of times per day each user should be logged in and out. The default is 0.

-variable - conference room participants, and durations are considered variable if this setting is used. By default this option is not used.

-rooms <number> - number of private conference rooms user creates each day. The default is 5.

-duration <minutes> - maximum duration of each private conference room. The default is 10 minutes. If the variable option is ser, a random duration of between 1 minute and the maximum duration is used for each private conference room created.

-people <number> - maximum number of users that are invited to each private conference room. If the variable option is set, and if the value is greater than 2, a random number of users between 2 and the maximum number are invited. The default is 2.

-pub-rooms <number> - number of public conference rooms user creates each day. The default is 1.

-pub-duration <minutes> - maximum duration of each public conference room. The default is 30 minutes. If the variable option is set, a random duration of between 5 minute and the maximum duration is used for each private conference room created.

-pub-people <number> - maximum number of users that are invited to each public conference room. If the variable option is ser, and if the value is greater than 2, a random number of users between 2 and the maximum number are invited. The default is 3.

-noconferences - no conference rooms are used in the load run. This option is used to override the default rooms and/or pub-room options. By default, this option is not used

-notification <number> - number of notifications per day sent by each user. The default is 0.

-recipient <number> - number of recipients per notification sent. Recipients are randomly selected from among the currently logged in users. The default is 1;

-pul <percentage> - percentage of users logged in any given time period. The default is 100. It is used to calculate the delay used during relogins, i.e. time delay between logging out a user and relogging in the user.

-day <hours> - number of hours in a day. The default is 8. This option is used to calculate the delay between IM service operations, i.e. time interval between relogins, creating conference rooms, sending notifications, and sending presence updates.

-debug - enables debug, debug log entries are printed to std out. By default, debug is disabled.

-ssoserver <server:port> - access manager to use for sso logins. By default, ssoserver is not used.

-org <organization name> - organization to use for sso logins. By default, an organization is not used.

-suffix <root suffix> - root suffix to use for sso logins. By default, a suffix is not used

-bigconferences - Used to generate conferences with many users. All users will be invited to participate in the conference by a randomly selected user, the conference initiator. The events in this room are masked and will only be sent to moderator. The conference initiator will send a message to the conference every 5 minutes.

-noinvite <conference initiator> - used with the bigconferences option. This option allows multiple program instances to participate in the conference. The conference initiator does not send invitations to conference participants, instead, users join the conference after logging in. The conference initiator must be specified as an uid@domain, e.g. 1500025@red.iplanet.com. This option allows multiple program instances to participate in the conference.

##########################################################################################################################
Current Issues:
##########################################################################################################################
1. Both Populate and Generate assume each users login is "iplanet". This may not be suitable for customer deployment testing.

2. Two warnings intermittenly occur in the server log, regarding conference room usage, i.e.:
xmppd.log.1:17:13:35,559 WARN xmppd com.sun.im.service.util.Worker 4? GroupChat:loadPublicConf-1500379@muc.red.iplanet.com No InterWiki reference defined in properties for Wiki called 'GroupChat'!) nickname/session mismatch: jid=1500379@red.iplanet.com/1118180414895 nick=1500379

xmppd.log.2:17:04:16,780 WARN xmppd com.sun.im.service.util.Worker 33? GroupChat:loadPublicConf-1501008@muc.red.iplanet.com No InterWiki reference defined in properties for Wiki called 'GroupChat'!) non-participant attempting to post message: 1501008@red.iplanet.com/1118185148099

3. Load statistics output indicates that conference resources are not being maintained (should be easy to fix). It also appears that through the course of a load run, the number of active sessions degrades, this appears to be a problem in the LoadStatistics class, as cumulative counts of logins differ from the number of login entries in the log file.

4. Both tools are available in the tip (i.e absolut release), for others to use these tools for IM 7.0, they should be merged in the 7.0 branch and released in the a patch.

##########################################################################################################################
Usage Tips
##########################################################################################################################

classpath should ONLY contain imnet.jar file. You can pick up the imnet.jar file from /opt/SUNWiim/lib/imnet.jar location. 
Latest imnet.jar usage is always recommended.

- If you want to run the Generate against different SessionProviders
factory=org.netbeans.lib.collab.CollaborationSessionFactory
session_provider=org.netbeans.lib.collab.xmpp.httpbind.HTTPBindSessionProvider
java -D$factory=$session_provider -cp $class_path org.netbeans.lib.collab.tools.Generate contractfiles/chat-contract

- run.sh
java -cp $class_path org.netbeans.lib.collab.tools.Generate contractfiles/chat-contract

- sample contractfile
im-niag1.india.sun.com:5222 1504000 1000 -rooms 30 -people 40 -pub-rooms 20 -pub-people 1000 -notification 300 -receipent 400
 -pul 50 -updates 1000 -log ./logs/load-out-pres -stats:period 5

- running the im-server in MANAGEMENT mode for the debugging purpose
add the below mentioned details in the imadmin file & then user jconsole of JDK6 to monitor the jvm running IM server at port 19999

Edit the /opt/SUNWiim/sbin/imadmin file & add MANAGEMENT_OPTIONS variable as shown below & add $MANAGEMENT_OPTIONS on java_cmd as shown below:
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
MANAGEMENT_OPTIONS="-Dcom.sun.management.jmxremote.port=19999 -Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.man
agement.jmxremote.ssl=false"

# AM's extended LogManager and LogConfigReader are conflicting with other components using jdk logging.
# This seems to be the way to do logging by amsdk locally. Removed those parametrs.
# Without those parametrs AM is doing logging remotely on AM server.
# Therfore turned off logging completely. Debug logging continous to happen.

        $execdaemon_cmd $java_cmd -server $MANAGEMENT_OPTIONS -Xmx${maxmemsize}m -cp $server_classpath -Dlogdir=$logdir -Djava.awt.headless=true -Dcom.iplanet.am.logstatus=INACTIVE -Djava.protocol.handler.pkgs=com.iplanet.services.comm -Dcom.iplanet.coreservices.configpath=${AM_CONFIG_DIR}/config/ums com.iplanet.im.server.NMS -c $config_file -w 15 &

        status=$?
      else
        $execdaemon_cmd $java_cmd  $MANAGEMENT_OPTIONS -Dlogdir=$logdir -Djava.awt.headless=true -server -Xmx${maxmemsize}m -cp $server_classpath com.iplanet.im.server.NMS -c $config_file -w 15 &
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

Launch the jconsole using the below command on Windows/Linux/Solaris: $JDK_HOME/bin/jconsole
More details about jconsole at: http://java.sun.com/javase/6/docs/technotes/guides/management/jconsole.html

# Command to dump the jvm's memory heap to a file for evaluation of the bottleneck(for 64-bit jvm).
/usr/jdk/jdk1.6.0_02/bin/jmap -d64 -dump:format=b,file=/space/server_mem_dump_file_25  `cat xmppd.pid `

# COmmand for analysing the head memory dump created from the above command(for 64-bit jvm):
/usr/jdk/jdk1.6.0_02/bin/jhat -d64 -J-mx4098m /space/server_mem_dump_file_25

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
- Whenever JVM goes OOM due to IM server or crashes, dumping the heapmemory completely to a file is always useful for debugging purpose. To dump the heapmemory to a file automatically as soon as the OOM happens, use the following 64 bit JVM option:

OPTION_64="-d64 -XX:HeapDumpPath=/space/memory.dump_server.`date` -XX:-HeapDumpOnOutOfMemoryError"

Edit the /opt/SUNWiim/sbin/imadmin file & add OPTION_64 variable as shown below on java_cmd as shown below:

OPTION_64="-d64 -XX:HeapDumpPath=/space/memory.dump_server.`date` -XX:-HeapDumpOnOutOfMemoryError"

$execdaemon_cmd $java_cmd $OPTION_64 $MANAGEMENT_OPTIONS -server -Xmx${maxmemsize}m -cp $server_classpath -Dlogdir=$logdir -Djava.awt.headless=true -Dcom.iplanet.am.logstatus=INACTIVE -Djava.protocol.handler.pkgs=com.iplanet.services.comm -Dcom.iplanet.coreservices.configpath=${AM_CONFIG_DIR}/config/ums com.iplanet.im.server.NMS -c $config_file -w 15 &

$execdaemon_cmd $java_cmd $OPTION_64 $MANAGEMENT_OPTIONS -Dlogdir=$logdir -Djava.awt.headless=true -server -Xmx${maxmemsize}m -cp $server_classpath com.iplanet.im.server.NMS -c $config_file -w 15 &
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
